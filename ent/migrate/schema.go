// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// DepositsColumns holds the columns for the "deposits" table.
	DepositsColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "created_at", Type: field.TypeTime},
	}
	// DepositsTable holds the schema information for the "deposits" table.
	DepositsTable = &schema.Table{
		Name:       "deposits",
		Columns:    DepositsColumns,
		PrimaryKey: []*schema.Column{DepositsColumns[0]},
	}
	// FundsColumns holds the columns for the "funds" table.
	FundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
	}
	// FundsTable holds the schema information for the "funds" table.
	FundsTable = &schema.Table{
		Name:       "funds",
		Columns:    FundsColumns,
		PrimaryKey: []*schema.Column{FundsColumns[0]},
	}
	// CustomerDepositsColumns holds the columns for the "customer_deposits" table.
	CustomerDepositsColumns = []*schema.Column{
		{Name: "customer_id", Type: field.TypeUUID},
		{Name: "deposit_id", Type: field.TypeUUID},
	}
	// CustomerDepositsTable holds the schema information for the "customer_deposits" table.
	CustomerDepositsTable = &schema.Table{
		Name:       "customer_deposits",
		Columns:    CustomerDepositsColumns,
		PrimaryKey: []*schema.Column{CustomerDepositsColumns[0], CustomerDepositsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "customer_deposits_customer_id",
				Columns:    []*schema.Column{CustomerDepositsColumns[0]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "customer_deposits_deposit_id",
				Columns:    []*schema.Column{CustomerDepositsColumns[1]},
				RefColumns: []*schema.Column{DepositsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// FundDepositsColumns holds the columns for the "fund_deposits" table.
	FundDepositsColumns = []*schema.Column{
		{Name: "fund_id", Type: field.TypeUUID},
		{Name: "deposit_id", Type: field.TypeUUID},
	}
	// FundDepositsTable holds the schema information for the "fund_deposits" table.
	FundDepositsTable = &schema.Table{
		Name:       "fund_deposits",
		Columns:    FundDepositsColumns,
		PrimaryKey: []*schema.Column{FundDepositsColumns[0], FundDepositsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fund_deposits_fund_id",
				Columns:    []*schema.Column{FundDepositsColumns[0]},
				RefColumns: []*schema.Column{FundsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "fund_deposits_deposit_id",
				Columns:    []*schema.Column{FundDepositsColumns[1]},
				RefColumns: []*schema.Column{DepositsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		DepositsTable,
		FundsTable,
		CustomerDepositsTable,
		FundDepositsTable,
	}
)

func init() {
	CustomerDepositsTable.ForeignKeys[0].RefTable = CustomersTable
	CustomerDepositsTable.ForeignKeys[1].RefTable = DepositsTable
	FundDepositsTable.ForeignKeys[0].RefTable = FundsTable
	FundDepositsTable.ForeignKeys[1].RefTable = DepositsTable
}
